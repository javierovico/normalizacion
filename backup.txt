
function leer(file){
    const reader = new FileReader();
    reader.onload = function (e) {
        const data = e.target.result;
        const workbook = XLSX.read(data,{
            type: 'binary'
        });
        const sheet = workbook.Sheets[workbook.SheetNames[0]];
        const range = XLSX.utils.decode_range(sheet['!ref']);
        let cabezera = [];
        for(let colNum = range.s.c; colNum <= range.e.c;colNum++){
            let celda = sheet[XLSX.utils.encode_cell({r:range.s.r,c:colNum})];
            if(typeof celda !== 'undefined'){
                cabezera.push(celda.w)
            }
        }
        console.log(cabezera);
    };
    reader.onerror = function (ex) {
        console.log(ex);
    };
    reader.readAsBinaryString(file);
}

function imprimirTitulos() {
    tituloVue.titulos = [];
    tituloVue.filas.push(obtenerFila(0));
}
function imprimirSegmento(inicio, cantidad) {
    let rangoFilas = [];
    for(let rowNum = inicio; rowNum < (inicio + cantidad); rowNum++){   //empieza en la segunda fila (+1)
        rangoFilas.push(obtenerFila(rowNum));
    }
    tituloVue.filas = rangoFilas;
}

function mostrarTodos(file) {
    const reader = new FileReader();
    reader.onload = function (e) {
        const data = e.target.result;
        const workbook = XLSX.read(data,{
            type: 'binary'
        });
        const sheet = workbook.Sheets[workbook.SheetNames[0]];
        const range = XLSX.utils.decode_range(sheet['!ref']);
        tituloVue.titulos = []; //limpia el titulo
        tituloVue.filas = [];
        for(let colNum=range.s.c; colNum<=range.e.c; colNum++){ //leer la primera fila
            let nextCell = sheet[
                XLSX.utils.encode_cell({r: range.s.r, c: colNum})
                ];
            if( typeof nextCell !== 'undefined' ){
                const valor = nextCell.w;
                tituloVue.titulos.push(valor)
            }
        }
        let filas = [];
        for(let rowNum = range.s.r+1; rowNum <= range.e.r; rowNum++){   //empieza en la segunda fila (+1)
            let filaGenerada = [];
            for(let colNum=range.s.c; colNum<=range.e.c; colNum++){
                let nextCell = sheet[
                    XLSX.utils.encode_cell({r: rowNum, c: colNum})
                    ];
                if( typeof nextCell !== 'undefined' ){
                    const valor = nextCell.w;
                    filaGenerada.push(valor);
                }else{
                    filaGenerada.push('');  //agrega un vacio
                }
            }
            filas.push(filaGenerada);
        }
        tituloVue.filas=filas;
    };
    reader.onerror = function (ex) {
        console.log(ex);
    };
    reader.readAsBinaryString(file);
    ////////////////////////////////////////////////
    // var reader = new FileReader();
    // reader.onload = function(e) {
    //     var data = e.target.result;
    //     var workbook = XLSX.read(data, {
    //         type: 'binary'
    //     });
    //     var salida = $('#salida');
    //     workbook.SheetNames.forEach(function(sheetName) {
    //         let arrayR = convertirArray(workbook.Sheets[sheetName]);
    //         let filaTitulos = arrayR[0];
    //         let tituloVue = new Vue({
    //             el: '#titulos-tr',
    //             data: {
    //                 titulos: filaTitulos,
    //                 filas: arrayR
    //             }
    //         });
    //         // for(let f = 1;f < /*200*/arrayR.length; f++){
    //         //     var fila = arrayR[f];
    //         //     for(let col = 0; col< fila.length; col++){   //recorrer todos los numeros
    //         //
    //         //     }
    //         // }
    //     });
    // };
    // reader.onerror = function(ex) {
    //     console.log(ex);
    // };
    // reader.readAsBinaryString(file);
}

// function procesar(file) {
//     var registrosExitosos = [];
//     var registrosErroneos = [];
//     var reader = new FileReader();
//     reader.onload = function(e) {
//         var data = e.target.result;
//         var workbook = XLSX.read(data, {
//             type: 'binary'
//         });
//         var salida = $('#salida');
//         salida.append("INICIO REGISTRO");
//         workbook.SheetNames.forEach(function(sheetName) {
//             var arrayR = convertirArray(workbook.Sheets[sheetName]);
//             for(let f = 1;f < /*200*/arrayR.length; f++){
//                 var validado = true;    //para saber si es valido el registro o no
//                 var fila = arrayR[f];
//                 var numeros = [];   //contendre los numeros validos
//                 for(let col = 23; col<29; col++){   //recorrer todos los numeros
//                     var numero = ((typeof fila[col]) === "string")?fila[col].replace(/\D/g,'').replace(/^0+/, ''):'';
//                     if(numero.length < 8){  //menores que ocho, se desechan
//                         numero = null;
//                     }else if(numero.length === 8 || numero.length===9){ //de ocho o nueve se aceptan tal cual
//                         numero = numero;
//                     }else if(numero.length === 10 || numero.length===11){ //se extraen los nueve primeros caracteres cuando son de 10 o 11
//                         numero = numero.substr(0,9);
//                     }else{  //los que son mayores o iguales a 14
//                         numero = numero.substr(numero.length-9,9);
//                     }
//                     if(numero){
//                         numeros.push(numero);
//                     }
//                 }
//                 if(numeros.length===0){ //si no existio ningun numero, entonces no es valida la fila
//                     validado = false;
//                 }
//                 if(validado){
//                     salida.append(`<br>Cliente: ${fila[14]}`);
//                     numeros.forEach(function (num) {
//                         salida.append(`<br>Tel :${num}`);
//                     });
//                 }else{
//                     registrosErroneos.push(fila)
//                 }
//             }
//             // Here is your object
//             // var XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
//             // var json_object = JSON.stringify(XL_row_object);
//             // console.log(json_object);
//         });
//         console.log(registrosErroneos.length);
//     };
//     reader.onerror = function(ex) {
//         console.log(ex);
//     };
//     reader.readAsBinaryString(file);
// }

function convertirArray(sheet){
    var result = [];
    var row;
    var rowNum;
    var colNum;
    var range = XLSX.utils.decode_range(sheet['!ref']);
    for(rowNum = range.s.r; rowNum <= range.e.r; rowNum++){
        row = [];
        for(colNum=range.s.c; colNum<=range.e.c; colNum++){
            var nextCell = sheet[
                XLSX.utils.encode_cell({r: rowNum, c: colNum})
                ];
            if( typeof nextCell === 'undefined' ){
                row.push(void 0);
            } else row.push(nextCell.w);
        }
        result.push(row);
    }
    return result;
}

const prefijos = [
    '21',
    '32',
    '38',
    '39',
    '41',
    '44',
    '46',
    '47',
    '48',
    '61',
    '71',
    '72',
    '73',
    '81',
    '83',
    '224',
    '225',
    '226',
    '228',
    '271',
    '275',
    '291',
    '292',
    '293',
    '294',
    '295',
    '318',
    '331',
    '336',
    '337',
    '342',
    '343',
    '345',
    '347',
    '351',
    '418',
    '424',
    '425',
    '431',
    '432',
    '451',
    '453',
    '464',
    '471',
    '491',
    '492',
    '493',
    '494',
    '497',
    '510',
    '511',
    '512',
    '513',
    '514',
    '515',
    '516',
    '517',
    '518',
    '519',
    '520',
    '521',
    '522',
    '523',
    '524',
    '525',
    '526',
    '527',
    '528',
    '529',
    '530',
    '531',
    '532',
    '533',
    '534',
    '535',
    '536',
    '537',
    '538',
    '539',
    '540',
    '541',
    '542',
    '543',
    '544',
    '545',
    '546',
    '547',
    '548',
    '549',
    '550',
    '552',
    '553',
    '554',
    '631',
    '632',
    '633',
    '644',
    '671',
    '672',
    '673',
    '674',
    '676',
    '677',
    '678',
    '717',
    '740',
    '741',
    '742',
    '743',
    '744',
    '762',
    '763',
    '764',
    '765',
    '767',
    '768',
    '775',
    '780',
    '781',
    '782',
    '783',
    '784',
    '785',
    '786',
    '787',
    '788',
    '858'
];